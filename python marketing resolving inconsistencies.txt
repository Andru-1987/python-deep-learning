#bug arose sometime around 2018-01-11

house_ads_no_bug = house_ads['date_served']>'2018-01-11']

lang_conv=conversion_rate(house_ads_no_bug,['language_displayed'])

spanish_index = lang_conv['Spanish']/lang_conv['English']
arabic_index = lang_conv['Arabic']/lang_conv['English']
german_index = lang_conv['German']/lang_conv['English']


#calculate the total number of users and the conversion rate on each day

#get the total number of users that converted
language_conversion = house_ads.groupby(['date_served','language_preferred']).agg({'user_id':'nunique','converted':'sum'})


expected_conversion = pd.DataFrame(
	language_conversion.unstack(level=1))


# slice data only during the time period when the language was a problem

language_conversion['actual_english_conversations']=
language_conversion.loc['2018-01-11':'2018-01-31'][('converted','English')]


#create the expected conversion rates for each language

language_conversion['expected_spanish_rate']=language_conversion['actual_english_rate']*spanish_index * language_conversion[('user_id','Spanish')]
language_conversion['expected_arabic_rate']=language_conversion['actual_english_rate']*arabic_index* language_conversion[('user_id','Arabic')]
language_conversion['expected_german_rate']=language_conversion['actual_english_rate']*german_index* language_conversion[('user_id','German')]


###determine the number of lost subscribers

bug_period=language_conversion.loc['2018-01-11':'2018-01-31']

expected_subs= bug_period['expected_spanish_conv_rate'].agg('sum')+
	bug_period['expected_arabic_conv_rate'].agg('sum')+
	bug_period['expected_german_conv_rate'].agg('sum')

actual_subs= bug_period[('converted','Spanish')].agg('sum')+
	bug_period[('converted','arabic')].agg('sum')+
	bug_period[('converted','german'].agg('sum')

lost_subs=expected_subs - actual_subs


>>>>>>> pre error conversion rates

# Calculate pre-error conversion rate
house_ads_bug = house_ads[house_ads['date_served'] < '2018-01-11']
lang_conv =conversion_rate(house_ads_bug,['language_displayed'])

# Index other language conversion rate against English
spanish_index = lang_conv['Spanish']/lang_conv['English']
arabic_index = lang_conv['Arabic']/lang_conv['English']
german_index = lang_conv['German']/lang_conv['English']

print("Spanish index:", spanish_index)
print("Arabic index:", arabic_index)
print("German index:", german_index)


Spanish index: 1.681924882629108
Arabic index: 5.045774647887324
German index: 4.485133020344287

# Group house_ads by date and language
converted = house_ads.groupby(['date_served','language_preferred'])\
                        .agg({'user_id':'nunique',
                              'converted':'sum'})

# Unstack converted
converted_df = pd.DataFrame(converted.unstack(level=1))

print(converted_df)

                                  user_id                        converted                       
language_preferred  Arabic English German Spanish    Arabic English German Spanish
date_served                                                                       
2018-01-01             2.0   171.0    5.0    11.0       2.0    13.0    1.0     0.0
2018-01-02             3.0   200.0    5.0    10.0       0.0    14.0    3.0     0.0
2018-01-03             2.0   179.0    3.0     8.0       0.0    15.0    1.0     1.0
2018-01-04             2.0   149.0    2.0    14.0       0.0    12.0    0.0     3.0
2018-01-05             NaN   143.0    1.0    14.0       NaN    17.0    0.0     3.0
2018-01-06             3.0   136.0    2.0    11.0       3.0    12.0    0.0     2.0
2018-01-07             2.0   117.0    2.0    10.0       2.0    14.0    2.0     1.0
2018-01-08             NaN   138.0    6.0    10.0       NaN    11.0    3.0     2.0
2018-01-09             NaN   147.0    NaN    10.0       NaN    19.0    NaN     1.0
2018-01-10             NaN   147.0    4.0    18.0       NaN    15.0    2.0     4.0
2018-01-11             7.0   133.0    2.0    13.0       0.0     6.0    0.0     0.0
2018-01-12             3.0   129.0    4.0    11.0       0.0     3.0    0.0     1.0
2018-01-13             6.0   121.0    5.0    16.0       0.0     5.0    1.0     0.0
2018-01-14             5.0   131.0    3.0    12.0       0.0     6.0    0.0     0.0
2018-01-15             2.0   189.0    4.0    10.0       0.0     6.0    0.0     0.0
2018-01-16             7.0   127.0    4.0    17.0       0.0     6.0    0.0     0.0
2018-01-17             2.0   126.0    3.0    16.0       0.0     2.0    0.0     4.0
2018-01-18             7.0   121.0    6.0    18.0       0.0     5.0    1.0     0.0
2018-01-19             5.0   126.0    5.0    12.0       1.0     4.0    0.0     0.0
2018-01-20             6.0   124.0    6.0    14.0       1.0     4.0    1.0     0.0
2018-01-21             1.0    99.0    4.0     9.0       0.0     5.0    0.0     0.0
2018-01-22             2.0    72.0    3.0     8.0       1.0     4.0    1.0     0.0
2018-01-23             3.0    69.0    4.0     9.0       0.0     5.0    0.0     0.0
2018-01-24             2.0    83.0    3.0     8.0       0.0     6.0    0.0     0.0
2018-01-25             3.0    75.0    4.0    11.0       0.0     4.0    2.0     0.0
2018-01-26             6.0    89.0    3.0    16.0       0.0     4.0    0.0     2.0
2018-01-27             3.0   148.0    3.0    12.0       1.0     4.0    0.0     1.0
2018-01-28             5.0   134.0    3.0    21.0       0.0     4.0    0.0     2.0
2018-01-29             7.0   138.0    4.0    15.0       2.0     3.0    0.0     0.0
2018-01-30             4.0   139.0    3.0    18.0       0.0     4.0    0.0     2.0
2018-01-31             7.0   130.0    4.0    16.0       1.0     4.0    0.0     1.0

# Create English conversion rate column for affected period
converted['english_conv_rate'] = converted.loc['2018-01-11':'2018-01-31'][('converted','English')]

# Create expected conversion rates for each language
converted['expected_spanish_rate'] = converted['english_conv_rate'] * spanish_index
converted['expected_arabic_rate'] = converted['english_conv_rate'] * arabic_index
converted['expected_german_rate'] = converted['english_conv_rate'] * german_index

# Multiply number of users by the expected conversion rate
converted['expected_spanish_conv'] = converted['expected_spanish_rate']/100*converted[('user_id','Spanish')]
converted['expected_arabic_conv'] = converted['expected_arabic_rate']/100*converted[('user_id','Arabic')]
converted['expected_german_conv'] = converted['expected_german_rate']/100*converted[('user_id','German')]

# Use .loc to slice only the relevant dates
converted = converted.loc['2018-01-11':'2018-01-31']

# Sum expected subscribers for each language
expected_subs = converted['expected_spanish_conv'].sum() + converted['expected_arabic_conv'].sum() + converted['expected_german_conv'].sum()

# Calculate how many subscribers we actually got
actual_subs = converted[('converted','Spanish')].sum() + converted[('converted','Arabic')].sum() + converted[('converted','German')].sum()

# Subtract how many subscribers we got despite the bug
lost_subs = expected_subs - actual_subs
print(lost_subs)

32.14414319248826