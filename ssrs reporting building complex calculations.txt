1. window functions
2. layered functions


sum(value) over(partition by field order by field)

partition by = range of calculation
order by = order of rows when running calculation



select
country_id,
athlete_id,
sum(bronze) over() total_bronze,
sum(bronze) over(partition by country_id) as country_bronze
from summer_games

over() calculates over the whole table

sum, min,max, avg
lag, lead
row_number,rank


select
team_id,
sum(points) as team_points,
sum(sum(points)) over() as league_points
from original_table
group by team_id

the inner sum sums points by team id, the outer sum runs the window function

error: points must be an aggregation or appear in a group by statement


select max(bronze_medals)
from
(select country_id, SUM(bronze) as bronze_medals
from summer_games
GROUP BY country_id) as subquery

>>>>>>


SELECT 
	country_id,
    year,
    gdp,
    -- Show the average gdp across all years per country
	AVG(gdp) over(PARTITION BY country_id) AS country_avg_gdp
FROM country_stats;

>>>>>>

-- Query total_golds by region and country_id
SELECT 
	region, 
    country_id, 
    Sum(gold) AS total_golds
FROM summer_games_clean AS s
JOIN countries AS c
ON s.country_id=c.id
GROUP BY region,country_id order by total_golds desc;


>>>>>>

-- Pull in avg_total_golds by region
SELECT 
	Region,
    Avg(total_golds) AS avg_total_golds
from
  (SELECT 
      region, 
      country_id, 
      SUM(s.gold) AS total_golds
  FROM summer_games_clean AS s
  JOIN countries AS c
  ON s.country_id = c.id
  -- Alias the subquery
  GROUP BY region, country_id) AS subquery
GROUP BY Region
-- Order by avg_total_golds in descending order
ORDER BY avg_total_golds desc;

>>>>>>>>

SELECT 
	-- Query region, athlete_name, and total gold medals
	region, 
    a.Name AS athlete_name, 
    Sum(gold) AS total_golds,
    -- Assign a regional rank to each athlete
    ROW_NUMBER() over(Partition by region order by Sum(gold) desc ) AS row_num
FROM summer_games_clean AS s
JOIN athletes AS a
ON s.athlete_id=a.id
JOIN countries AS c
ON s.country_id=c.id
GROUP BY region, athlete_name
Order By total_golds desc


>>>>>>

-- Query region, athlete name, and total_golds
SELECT 
	region,
    athlete_name,
    total_golds, row_num
FROM
    (SELECT 
		-- Query region, athlete_name, and total gold medals
        region, 
        name AS athlete_name, 
        SUM(gold) AS total_golds,
        -- Assign a regional rank to each athlete
        ROW_NUMBER() OVER (PARTITION BY region ORDER BY SUM(gold) DESC) AS row_num
    FROM summer_games_clean AS s
    JOIN athletes AS a
    ON a.id = s.athlete_id
    JOIN countries AS c
    ON s.country_id = c.id
    -- Alias as subquery
    GROUP BY region, athlete_name) AS subquery
-- Filter for only the top athlete per region
WHERE row_num=1;