latice plot

data must be in tidy format

g= sns.FacetGrid(df, col='HIGHDEG')

g.map(sns.boxplot, 'Tuition', order=['1','2','3','4'])


short cut

sns.factorplot(x='Tuition', data=df, col='HIGHDEG', kind='box')


>>>>Facetgrid supports scatter and regression

g= sns.FacetGrid(df, col='HIGHDEG')
g.map(plt.scatter, 'Tuition', 'SAT_AVG_ALL')

lmlplot plots scatter and regression plots on a facetgrid

sns.lmplot(data=df, x='Tuition', y='SAT_AVG_ALL',
col='HIGHDEG', fit_reg=False)

>>>>Sample >>> facetgrid  >> point plot and row order


# Create FacetGrid with Degree_Type and specify the order of the rows using row_order
g2 = sns.FacetGrid(df,row="Degree_Type",
             row_order=['Graduate', 'Bachelors', 'Associates', 'Certificate'])

# Map a pointplot of SAT_AVG_ALL onto the grid
g2.map(sns.pointplot, 'SAT_AVG_ALL')

# Show the plot
plt.show()
plt.clf()

>>>sample >> factor plot

# Create a facetted pointplot of Average SAT_AVG_ALL scores facetted by Degree Type 
sns.factorplot(data=df,
        x='SAT_AVG_ALL',
        kind='point',
        row='Degree_Type',
        row_order=['Graduate', 'Bachelors', 'Associates', 'Certificate'])

plt.show()
plt.clf()

>>>>sample >> facetgrid >>> scatter plot

# Create a FacetGrid varying by column and columns ordered with the degree_order variable
g = sns.FacetGrid(df, row="Degree_Type", row_order=degree_ord)

# Map a scatter plot of Undergrad Population compared to PCTPELL
g.map(plt.scatter, 'UG', 'PCTPELL')

plt.show()
plt.clf()

<<<<<sample >>>> facetgrid >> col_order,  >>> scatter plot

# Create a FacetGrid varying by column and columns ordered with the degree_order variable
g = sns.FacetGrid(df, col="Degree_Type", col_order=degree_ord)

# Map a scatter plot of Undergrad Population compared to PCTPELL
g.map(plt.scatter, 'UG', 'PCTPELL')

plt.show()
plt.clf()

>>>>>>Sample  >>> lmplot

# Re-create the plot above as an lmplot
sns.lmplot(data=df,
        x='UG',
        y='PCTPELL',
        col="Degree_Type",
        col_order=degree_ord)

plt.show()
plt.clf()

# Re-create the plot above as an lmplot
sns.lmplot(data=df,
        x=' Total Discharges ',
        y=' Average Total Payments ',
        col="DRG",
        col_order=['684','683','682'])

plt.show()
plt.clf()


>>>>>>sample >>>> lmplot with rol and col

# Create an lmplot that has a column for Ownership, a row for Degree_Type and hue based on the WOMENONLY column
inst_ord=['Public', 'Private non-profit']

sns.lmplot(data=df,
        x='SAT_AVG_ALL',
        y='Tuition',
        col="Ownership",
        row='Degree_Type',
        row_order=['Graduate', 'Bachelors'],
        hue='WOMENONLY',
        col_order=inst_ord)

plt.show()
plt.clf()

Index(['INSTNM', 'OPEID', 'REGION', 'SAT_AVG_ALL', 'PCTPELL', 'PCTFLOAN',
       'ADM_RATE_ALL', 'UG', 'AVGFACSAL', 'COMPL_RPY_5YR_RT', 'DEBT_MDN',
       'MEDIAN_HH_INC', 'ICLEVEL', 'HIGHDEG', 'CONTROL', 'WOMENONLY',
       'MENONLY', 'LOCALE', 'Tuition', 'Degree_Type', 'Ownership', 'Regions',
       'Locales', 'Locale_Short'],
      dtype='object')

