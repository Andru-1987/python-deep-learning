data duplication can cause bad decisions

1. remove aggregations
2. add field to join statement
3. rollup using subquery

rollup the dependent tables into the same granulity before a join takes place

select p.id, points, matches_won
from points as p
join
(select id, sum(matches_won) as matches_won
from matches
group by id) as m
on p.id=m.id

SELECT 
	w.country_id, 
    sum(gold) AS gold_medals, 
    avg(gdp) AS avg_gdp
FROM winter_games AS w
JOIN country_stats AS c
-- Only join on the country_id fields
ON w.country_id=c.country_id
GROUP BY w.country_id;

>>>>>

SELECT SUM(gold_medals) AS gold_medals
FROM
	(SELECT 
     	w.country_id, 
     	SUM(gold) AS gold_medals, 
     	AVG(gdp) AS avg_gdp
    FROM winter_games AS w
    JOIN country_stats AS c
    -- Update the subquery to join on a second field
    ON c.country_id = w.country_id 
    and cast(c.year as date)=cast(w.year as date)
    GROUP BY w.country_id) AS subquery;

>>>>>>>


SELECT 
	c.country,
    -- Add the three medal fields using one sum function
	sum(coalesce(gold,silver,bronze,0)) AS medals
FROM summer_games AS s
JOIN countries AS c
ON s.country_id=c.id
GROUP BY c.country
ORDER BY medals DESC;


>>>>>>


SELECT 
	c.country,
    -- Pull in pop_in_millions and medals_per_million 
    cast(pop_in_millions as float) pop_in_millions,
    -- Add the three medal fields using one sum function
	SUM(COALESCE(bronze,0) + COALESCE(silver,0) + COALESCE(gold,0)) AS medals,
    SUM(COALESCE(bronze,0) + COALESCE(silver,0) + COALESCE(gold,0)) / CAST(cs.pop_in_millions AS float) AS medals_per_million
FROM summer_games AS s
JOIN countries AS c
ON s.country_id = c.id
-- Add a join
JOIN country_stats AS cs
ON s.country_id=cs.country_id
GROUP BY c.country,pop_in_millions
ORDER BY medals DESC;

>>>>>>>


SELECT 
	c.country,
	s.year,
    -- Pull in pop_in_millions and medals_per_million 
	pop_in_millions,
    -- Add the three medal fields using one sum function
	SUM(COALESCE(bronze,0) + COALESCE(silver,0) + COALESCE(gold,0)) AS medals,
	SUM(COALESCE(bronze,0) + COALESCE(silver,0) + COALESCE(gold,0)) / CAST(cs.pop_in_millions AS float) AS medals_per_million
FROM summer_games AS s
JOIN countries AS c 
ON s.country_id = c.id
-- Update the newest join statement to remove duplication
JOIN country_stats AS cs 
ON s.country_id = cs.country_id
and cast(s.year as date)=cast(cs.year as date)
GROUP BY c.country, pop_in_millions,s.year
ORDER BY medals DESC;




