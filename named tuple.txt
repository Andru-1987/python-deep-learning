key names make the code easier to understand

a named tuple has names for each column in the tuple

named tuples is an alternative to a dataframe

pass a name and a list of fields


from collections import namedtuple



Eatery=namedtuple('Eatery',['name','location','park_id','type_name'])

eateries=[]

for eatery in nyc_eateries:
	details=Eatery(eatery['name'],
		eatery['location'],
		eatery['park_id'],
		eatery['type_name'])
	eateries.append(details)

namedtuples provide safe access to all the fields in the tuple.

for eatery in eateries[:3]:
	print(eatery.name)
	print(eatery.park_id)
	print(eatery.location)


>>>>>>

# Import namedtuple from collections
from collections import namedtuple

# Create the namedtuple: DateDetails
DateDetails = namedtuple('DateDetails', ['date', 'stop', 'riders'])

# Create the empty list: labeled_entries
labeled_entries = []

# Iterate over the entries list
for date,stop,riders in entries:
    # Append a new DateDetails namedtuple instance for each entry to labeled_entries
    labeled_entries.append(DateDetails(date,stop,riders))
    
# Print the first 5 items in labeled_entries
print(labeled_entries[:5])


>>>>>>>

# Iterate over the first twenty items in labeled_entries
for item in labeled_entries[:20]:
    # Print each item's stop
    print(item.stop)

    # Print each item's date
    print(item.date)

    # Print each item's riders
    print(item.riders)


