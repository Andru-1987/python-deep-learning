melt will unpivot a table wide to long format

first	last	height	weight
john	doe	5.5	130
mary	bo	6	150

this format is called wide

first	last	variable	value
john	doe	height		5.5
mary	bo	height		6.0
john	doe	weight		130
mary	bo	weight		150

this format is called long

wide format is easier to read

long format is easier to query

melt converts from wide to long format

social_fin_tall = social_fin.melt(id_vars=['financial','company'])

id_vars are columns to be used as identifiers. this are columns in the original dataset we do not want to change

social_fin_tall = social_fin.melt(id_vars=['financial','company'], value_vars=['2018','2017'],
var_name=['year'],value_name='dollars')


>>>>>Sample  >>> unpivoting using melt

# unpivot everything besides the year column
ur_tall = ur_wide.melt(id_vars=['year'],var_name=['month'],value_name='unempl_rate')

print(ur_wide)

# Create a date column using the month and year columns of ur_tall
ur_tall['date'] = pd.to_datetime(ur_tall['month'] + '-' + ur_tall['year'])

# Sort ur_tall by date in ascending order
ur_sorted = ur_tall.sort_values(by="date",ascending=True)

# Plot the unempl_rate by date
ur_sorted.plot(x="date",y="unempl_rate")
plt.show()


>>>>Sample >>> 

# Use melt on ten_yr, unpivot everything besides the metric column
bond_perc = ten_yr.melt(id_vars='metric', var_name='date', value_name='close')

# Use query on bond_perc to select only the rows where metric=close
bond_perc_close = bond_perc.query('metric == "close"')

# Merge (ordered) dji and bond_perc_close on date with an inner join
dow_bond = pd.merge_ordered(dji, bond_perc_close, on='date', 
                            suffixes=('_dow', '_bond'), how='inner')

# Plot only the close_dow and close_bond columns
dow_bond.plot(y=['close_dow', 'close_bond'], x='date', rot=90)
plt.show()








