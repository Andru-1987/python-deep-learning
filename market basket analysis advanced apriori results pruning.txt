targeted_rules = rules[rules['consequents']=={'HERB MARKER THYME'}.copy()

filtered_rules=target_rules[(targeted_rules['antecedent support']>0.01) 
	& ( target_rules['support'] > 0.009) 
	& target_rules['confidence']>0.85)
	& target_rules['lift']>1.00)]



print(filtered_rules['antecedents'])

Groupings

Group A:
1.Boxes and Bags
2.Signs and Candles

Group B:
1. Boxes and Candles
2. Signs and Bags


Group C
1. Boxes and Signs
2. Candles and Bags


print rules that indicate disassociation

print(rules[rules['zhang']<0][['antecedents','consequents']])

bag, candle
candle, bag
sign,bag
bag,sign

bag and candles and bag and signs should not be paired

use bags and boxes
and signs and candles


>>>>>>


# Apply the apriori algorithm with a minimum support of 0.0001
frequent_itemsets = apriori(aggregated, min_support=0.0001, use_colnames = True)

# Generate the initial set of rules using a minimum support of 0.0001
rules = association_rules(frequent_itemsets, 
                          metric = "support", min_threshold = 0.0001)

# Set minimum antecedent support to 0.35
rules = rules[rules['antecedent support'] > 0.35]

# Set maximum consequent support to 0.35
rules = rules[rules['consequent support'] < 0.35]

# Print the remaining rules
print(rules)

antecedents     consequents  antecedent support  consequent support  support  confidence   lift  leverage  conviction
1        (bag)           (box)               0.466               0.256    0.022       0.046  0.181    -0.098       0.780
3        (bag)        (candle)               0.466               0.089    0.011       0.023  0.260    -0.031       0.933
9       (sign)           (box)               0.356               0.256    0.019       0.053  0.207    -0.072       0.786
11      (sign)        (candle)               0.356               0.089    0.008       0.023  0.256    -0.024       0.932
16       (bag)  (candle, sign)               0.466               0.008    0.005       0.012  1.430     0.002       1.004
17      (sign)   (candle, bag)               0.356               0.011    0.005       0.015  1.405     0.002       1.004

# Generate the initial set of rules using a minimum lift of 1.00
rules = association_rules(frequent_itemsets, metric = "lift", min_threshold = 1)

# Set antecedent support to 0.005
rules = rules[rules['antecedent support'] > 0.005]

# Set consequent support to 0.005
rules = rules[rules['consequent support'] > 0.005]

# Compute Zhang's rule
rules['zhang'] = zhangs_rule(rules)

# Set the lower bound for Zhang's rule to 0.98
rules = rules[rules['zhang'] > 0.98]
print(rules[['antecedents', 'consequents']])

 antecedents                           consequents
    26       (PANTRY MAGNETIC  SHOPPING LIST)                 (BROCADE RING PURSE )
    27                  (BROCADE RING PURSE )      (PANTRY MAGNETIC  SHOPPING LIST)
    84              (JUMBO BAG PINK POLKADOT)          (HAND WARMER RED LOVE HEART)
    85           (HAND WARMER RED LOVE HEART)             (JUMBO BAG PINK POLKADOT)
    88   (WOOD 2 DRAWER CABINET WHITE FINISH)          (HAND WARMER RED LOVE HEART)
    89           (HAND WARMER RED LOVE HEART)  (WOOD 2 DRAWER CABINET WHITE FINISH)
    148                (RED STAR CARD HOLDER)                        (WICKER STAR )
    149                        (WICKER STAR )                (RED STAR CARD HOLDER)
    152      (RIBBON REEL CHRISTMAS PRESENT )  (WOODEN TREE CHRISTMAS SCANDINAVIAN)
    153  (WOODEN TREE CHRISTMAS SCANDINAVIAN)      (RIBBON REEL CHRISTMAS PRESENT )

Notice that 10 items had a Zhang's metric value of over 0.98, which suggests that the items are nearly perfectly associated in the data.
In general, when we see such strong associations, we'll want to think carefully about what explains them. We might, for instance, investigate 
whether the items be purchased separately or whether they are bundled in a way that prevents this.

# Apply the Apriori algorithm with a minimum support threshold of 0.001
frequent_itemsets = apriori(onehot, min_support = 0.001, use_colnames = True)

# Recover association rules using a minium support threshold of 0.001
rules = association_rules(frequent_itemsets, metric = 'support', min_threshold = 0.001)

# Apply a 0.002 antecedent support threshold, 0.60 confidence threshold, and 2.50 lift threshold
filtered_rules = rules[(rules['antecedent support'] > 0.002) &
						(rules['consequent support'] > 0.01) &
						(rules['confidence'] > 0.60) &
						(rules['lift']> 2.50)]

# Print remaining rule
print(filtered_rules[['antecedents','consequents']])

antecedents                consequents
22  (BIRTHDAY CARD, RETRO SPOT)  (JUMBO BAG RED RETROSPOT)














