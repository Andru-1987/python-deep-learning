modularity

long hard to follow scripts do not follow modularity

divide your code into shorter modular units

modularity improves readability and improves maintainability

solve problems once

1. packages
2. methods
3. classes

benefits of documentation
1. show users how to use your project
2. prevent confusion from your collaborators
3. prevent fustration from future you

benefits of automated testing
1. save time over manual testing
2. find and fix bugs
3. run tests anytime/anywhere

pytest


>>>>>>> Packages

Python package index

Pypi

pip

pip install numpy


>>>>>>>>>reading documentation

help(numpy.busday_count)

>>>>>>>
# load the Counter function into our environment
from collections import Counter

# View the documentation for Counter.most_common
help(Counter.most_common)

Help on function most_common in module collections:

most_common(self, n=None)
    List the n most common elements and their counts from the most
    common to the least.  If n is None, then list all element counts.
    
    >>> Counter('abcdeabcdabcaba').most_common(3)
    [('a', 5), ('b', 4), ('c', 3)]


# load the Counter function into our environment
from collections import Counter

# View the documentation for Counter.most_common
help(Counter.most_common)

# use Counter to find the top 5 most common words
top_5_words = Counter(words).most_common(5)

# display the top 5 most common words
print(top_5_words )


>>>>>>>>>>> conventions  

pep 8
1. python enhancement proposals
2. code is read much more than it is written
3. use white space appropriately

pycodestyle package

pip install pycodestyle
pycodestyle file.py

it outputs the pep8 violations
1. line number and column number where the violation occurred


>>>>>>>>

# Import needed package
import pycodestyle

# Create a StyleGuide instance
style_checker = pycodestyle.StyleGuide()

# Run PEP 8 check on multiple files
result = style_checker.check_files(['nay_pep8.py', 'yay_pep8.py'])

# Print result of PEP 8 style check
print(result.messages)


























