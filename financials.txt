Gross Profit=direct sales + cost

Cogs = is the cost of selling these goods

gross profit = sales - cogs


Income Statement:
Inc: Sales
Inc: Cost of Goods Sold

Operating Expense
Exp: Selling Admin
Exp: R&D
Exp: Training

Net Profit


Gross Profit Margin = Gross Profit / SalesValue


>>>> Sample   >>> gross profit

# Set the sales variable to 8000
sales = 8000

# Set the cost of goods sold (cogs) variable to 5400
cogs = 5400

# Calculate the gross profit (gross_profit)
gross_profit = sales - cogs

# Print the gross profit
print("The gross profit is {}.".format(gross_profit))

# Calculate the gross profit margin
gross_profit_margin = gross_profit / sales

# Print the gross profit margin
print("The gross profit margin is {}.".format(gross_profit_margin))

2600
.3256

The higher margin you have the better of course, and also this margin will then pay for other expenses not directly related to the product, like Marketing


>>>>>Sample >>>> calculating net Profit

# Create and print the opex list
print(admin)
opex = [admin, travel, training, marketing, insurance]
print(opex)

print(sum(opex))
# Calculate and print net profit
net_profit = gross_profit - sum(opex)
print("The net profit is {}.".format(net_profit))


>>>>>>>>>>>>calculating sales and cost of goods sold

gross profits= sales - cost of sales 


Sales (income, revenue, turnover)

sales price per unit sp_unit
number of units sold

complexities:
discounts (discounted sales price)
credit sales (where the income is not received up front)

sales mix

>>>cost of goods sold (cogs)
1. total fixed costs
2. variable cost per unit
3. inventory opening balance
4. inventory closing balance

what does gross profit tells

profit margin %
Gross Profit Margin = Gross Profit / SalesValue


fixed costs are costs independent of units produced

variable costs per unit are costs incurred per unit produced.

variable costs are incurred only if the unit is produced

gp_margin
profit margin(%)

analyze the profitability of our core product

if your core product is not profitable how will you pay admin or other expenses or taxes or dividends

The gross profit can be used to calculate the break even point.

>>>>>>>>>>>>>>>>Break even point

Break even is where total cost and total revenue are equal.

break_even = fixed_costs / (sales price - variable_costs)


>>>> sample  >>> forecasting sales 
T-Z has launched a new range of T-Shirts linked to a celebrity meme for 40 USD per T-Shirt. They have excess stock of Celebshirt1 on their shelves, and in expectation of the release of Celebshirt2 in February, they have announced a 40% discount on Celebshirt1 in February.
For this exercise, prices are in USD, and unit amounts are total units sold in the respective month. The following variables have been defined for you:
sales_price = 40
units_january = 500
units_february = 700
The January sales only include sales of Celebshirt1. 
The February sales include sales of Celebshirt1 and Celebshirt2, at a ratio of 45:55.


# Set variables units sold and sales price of the T-shirts (basic and custom)

salesprice_basic = 15
salesprice_custom = 25

# Calculate the combined sales price taking into account the sales mix
average_sales_price = (salesprice_basic * 0.6) + (salesprice_custom * .4)

# Calculate the total sales for next month
sales_USD = forecast_units * average_sales_price

# Print the total sales
print("Next month's forecast sales figure is {:.2f} USD.".format(sales_USD))

>>>> sample >>> january and february sales

# Forecast the sales of January
sales_january = units_january * sales_price

# Forecast the discounted price
dsales_price = 40*.60

# Forecast the sales of February
sales_february = (40 * units_february * 0.55) + (dsales_price * .45 * units_february)

# Print the forecast sales for January and February
print("The forecast sales for January and February are {} and {} USD respectively.".format(sales_january, sales_february))

The forecast sales for January and February are 20000 and 20440.0 USD respectively.


>>>>>>Sample >>>> fixed costs
Material costs to produce one T-shirt is 8 USD. Labor costs are 2 USD per shirt.

The costs to rent a machine that produces these shirts is 1300 USD per month, regardless of the amount of shirts produced

# Set the variables for fixed costs and variable costs
fixed_costs = 1300 
print(variables)
variable_costs_per_unit = material_costs_per_unit + labor_costs_per_unit

# Calculate the cogs for January and February
cogs_jan = (units_jan * variable_costs_per_unit) + fixed_costs
cogs_feb = (units_feb * variable_costs_per_unit) + fixed_costs


>>>>>> sample >>> calculate cogs per month >>>  cost per unit

# From previous step
fixed_costs = machine_rental 
variable_costs_per_unit = material_costs_per_unit + labor_costs_per_unit
cogs_jan = (units_jan * variable_costs_per_unit) + fixed_costs
cogs_feb = (units_feb * variable_costs_per_unit) + fixed_costs

# Calculate the unit cost for January and February
unit_cost_jan = cogs_jan / units_jan
unit_cost_feb = cogs_feb / units_feb

# Print the January and February cost per unit
print("The cost per unit for January and February are {} and {} USD respectively.".format(unit_cost_jan, unit_cost_feb))

>>>>>sample >>>> number of units to break even

# Calculate the break-even point (in units) for Wizit
break_even = fixed_costs/(sales_price - variable_costs_per_unit)
print(variables)
# Print the break even point in units
print("The break even point is {} units.".format(break_even))

# Forecast the gross profit for January and February
gross_profit_jan = (sales_price*units_jan) - cogs_jan
gross_profit_feb = (sales_price*units_feb) - cogs_feb

# Print the gross profit for January and February
print("The gross profit for January and February are {} and {} USD respectively.".format(gross_profit_jan, gross_profit_feb))


>>>>>>>>>>>>>>>>Working with raw datasets

balance sheet

revenue
cost of revenue
gross profit
operating expenses
reserrhc and development
sales, general and administration
net income


>>>>> filtering for two rows

interesting_metrics=['Gross profit','Net income']

filter =income_statement_df.metric.isin(interesting_metrics)

filtered_income_statement=income_statement_df[filter]

print(filtered_income_statement.head())

>>>> more of the same

# Choose some interesting metrics
interesting_metrics = ['Operating income', 'Net income', 'Cost of revenue', 'Gross profit']

# Filter for rows containing these metrics
filtered_income_statement = income_statement[income_statement.metric.isin(interesting_metrics)]

# See the result
print(filtered_income_statement)

>>>>> sample  >>> filter a row and insert a column

revenue_metric = ['Revenue']

# Filter for rows containing the revenue metric
filtered_income_statement = income_statement[income_statement.metric.isin(revenue_metric)]

# Get the number of columns in filtered_income_statement
n_cols = len(filtered_income_statement.columns)

# Insert a column in the correct position containing the column 'Forecast'
filtered_income_statement.insert(n_cols, 'Forecast',13000) 

# See the result
print(filtered_income_statement)


>>>>>>>>>>>>>>>>balance sheet >>>>>>>

Assets
Liabilities
Capital (Equity)


There are four types of financial statements
1. Income Statement
2. Balance Sheet
3. Cash Flow Statement
4. Statement of Shareholder's Equity

Assets are economic resource and it can be used to make money

Liability = economic obligation to pay for something

equity = assets - liabilities

house_cost =100000
down_payment = 20000

financing the rest as a mortgage

mortgage =80000

total_equity = house_cost - mortgage

if your house value remains constant

owners_equity = assets - liabilities

Balance Sheet

	Assets
	a. bank
	b. debtors

	Equity

	Liabilities
	a. loans
	b. creditors

	Total Equity and liabilities


Income Sales are record and also recorded as a credit under the Debtors item in the balance sheet as an accounts receivable.

If we sell our credit we can buy our credit as well.  Operating expense are recorded on the income statment and also recorded as a liability creditors on the balance sheet.


>>>> sample

# Create the list for sales, and empty lists for debtors and credits
sales = [500, 350, 700]
debtors = [] 
credits = []

# Create the statement to append the calculated figures to the debtors and credits lists
for mvalue in sales: 
    credits.append(mvalue * 0.6)
    if month > 0:
        debtors.append(credits[month] + credits[month-1]) 
    else:
        debtors.append(credits[month])
    month += 1
# Print the result
print("The ‘Debtors’ are {}.".format(debtors))



























